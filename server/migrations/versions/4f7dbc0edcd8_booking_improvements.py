"""booking improvements

Revision ID: 4f7dbc0edcd8
Revises: d74379cff39c
Create Date: 2025-08-09 06:20:00.659094

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4f7dbc0edcd8'
down_revision = 'd74379cff39c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('public_id', sa.UUID(), nullable=False))
        batch_op.drop_column('status')
        batch_op.add_column(
            sa.Column('status', sa.Enum('created', 'expired', 'cancelled', 'passengers_added',
                                        'payment_pending', 'payment_confirmed', 'payment_failed',
                                        name='bookingstatus'), nullable=False, server_default='created'))
        batch_op.add_column(sa.Column('status_history', postgresql.JSONB(
            astext_type=sa.Text()), server_default='[]', nullable=False))
        batch_op.add_column(
            sa.Column('fare_price', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('fees', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('total_discounts',
                            sa.Float(), nullable=False))
        batch_op.add_column(
            sa.Column('total_price', sa.Float(), nullable=False))
        batch_op.alter_column('booking_number',
                              existing_type=sa.VARCHAR(),
                              nullable=True)
        batch_op.alter_column('email_address',
                              existing_type=sa.VARCHAR(),
                              nullable=True)
        batch_op.alter_column('phone_number',
                              existing_type=sa.VARCHAR(),
                              nullable=True)
        batch_op.drop_constraint(batch_op.f(
            'bookings_booking_number_key'), type_='unique')
        batch_op.create_index(batch_op.f('ix_bookings_booking_number'), [
                              'booking_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_bookings_public_id'), [
                              'public_id'], unique=True)
        batch_op.drop_column('final_price')
        batch_op.drop_column('base_price')

    with op.batch_alter_table('passengers', schema=None) as batch_op:
        batch_op.add_column(
            sa.Column('owner_user_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint(batch_op.f(
            'uix_passenger_unique'), type_='unique')
        batch_op.create_index(batch_op.f('ix_passengers_owner_user_id'), [
                              'owner_user_id'], unique=False)
        batch_op.create_index('ux_passenger_by_owner', ['owner_user_id', 'first_name', 'last_name', 'birth_date',
                              'document_type', 'document_number'], unique=True, postgresql_where=sa.text('owner_user_id IS NOT NULL'))
        batch_op.create_foreign_key(None, 'users', ['owner_user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('passengers', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index('ux_passenger_by_owner', postgresql_where=sa.text(
            'owner_user_id IS NOT NULL'))
        batch_op.drop_index(batch_op.f('ix_passengers_owner_user_id'))
        batch_op.create_unique_constraint(batch_op.f('uix_passenger_unique'), [
                                          'first_name', 'last_name', 'birth_date', 'document_type', 'document_number'], postgresql_nulls_not_distinct=False)
        batch_op.drop_column('owner_user_id')

    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('base_price', sa.DOUBLE_PRECISION(
            precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('final_price', sa.DOUBLE_PRECISION(
            precision=53), autoincrement=False, nullable=False))
        batch_op.drop_index(batch_op.f('ix_bookings_public_id'))
        batch_op.drop_index(batch_op.f('ix_bookings_booking_number'))
        batch_op.create_unique_constraint(batch_op.f('bookings_booking_number_key'), [
                                          'booking_number'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('phone_number',
                              existing_type=sa.VARCHAR(),
                              nullable=False)
        batch_op.alter_column('email_address',
                              existing_type=sa.VARCHAR(),
                              nullable=False)
        batch_op.alter_column('booking_number',
                              existing_type=sa.VARCHAR(),
                              nullable=False)
        batch_op.drop_column('total_price')
        batch_op.drop_column('total_discounts')
        batch_op.drop_column('fees')
        batch_op.drop_column('fare_price')
        batch_op.drop_column('status_history')
        batch_op.drop_column('public_id')

    # ### end Alembic commands ###
