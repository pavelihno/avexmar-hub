"""Tables initialized

Revision ID: d838251eca81
Revises: 
Create Date: 2025-07-14 10:45:23.712035

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd838251eca81'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bookings',
    sa.Column('booking_number', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('created', 'pending_payment', 'confirmed', 'cancelled', name='booking_status'), nullable=False),
    sa.Column('email_address', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('currency', sa.Enum('rub', name='currency'), nullable=False),
    sa.Column('base_price', sa.Float(), nullable=False),
    sa.Column('final_price', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('booking_number')
    )
    op.create_table('countries',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('name_en', sa.String(), nullable=True),
    sa.Column('code_a2', sa.String(length=2), nullable=False),
    sa.Column('code_a3', sa.String(length=3), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code_a2'),
    sa.UniqueConstraint('code_a3')
    )
    op.create_table('discounts',
    sa.Column('discount_name', sa.String(), nullable=False),
    sa.Column('discount_type', sa.Enum('round_trip', 'infant', 'child', name='discount_type'), nullable=False),
    sa.Column('percentage_value', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('discount_name')
    )
    op.create_table('passengers',
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('document_type', sa.Enum('passport', 'foreign_passport', 'international_passport', 'birth_certificate', name='document_type'), nullable=False),
    sa.Column('document_number', sa.String(), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('gender', sa.Enum('м', 'ж', name='gender'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_number'),
    sa.UniqueConstraint('document_number', 'document_type', name='uix_document_number_type')
    )
    op.create_table('users',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'standard', name='user_role'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('airlines',
    sa.Column('iata_code', sa.String(length=2), nullable=False),
    sa.Column('icao_code', sa.String(length=3), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('iata_code'),
    sa.UniqueConstraint('icao_code')
    )
    op.create_table('airports',
    sa.Column('iata_code', sa.String(length=3), nullable=False),
    sa.Column('icao_code', sa.String(length=4), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('city_name', sa.String(), nullable=False),
    sa.Column('city_name_en', sa.String(), nullable=True),
    sa.Column('city_code', sa.String(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('iata_code'),
    sa.UniqueConstraint('icao_code')
    )
    op.create_table('payments',
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('payment_method', sa.Enum('card', 'cash', name='payment_method'), nullable=False),
    sa.Column('payment_status', sa.Enum('pending', 'paid', 'refunded', 'failed', name='payment_status'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('routes',
    sa.Column('flight_number', sa.String(), nullable=False),
    sa.Column('airline_id', sa.Integer(), nullable=False),
    sa.Column('origin_airport_id', sa.Integer(), nullable=False),
    sa.Column('destination_airport_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['airline_id'], ['airlines.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['destination_airport_id'], ['airports.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['origin_airport_id'], ['airports.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flights',
    sa.Column('route_id', sa.Integer(), nullable=False),
    sa.Column('scheduled_departure', sa.DateTime(), nullable=True),
    sa.Column('scheduled_arrival', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('scheduled', 'delayed', 'departed', 'arrived', 'cancelled', name='flight_status'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tariffs',
    sa.Column('flight_id', sa.Integer(), nullable=False),
    sa.Column('seat_class', sa.Enum('economy', 'business', name='seat_class'), nullable=False),
    sa.Column('seats_number', sa.Integer(), nullable=False),
    sa.Column('currency', sa.Enum('rub', name='currency'), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['flight_id'], ['flights.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('seats',
    sa.Column('seat_number', sa.String(length=10), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=True),
    sa.Column('tariff_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['tariff_id'], ['tariffs.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tariff_id', 'seat_number', name='uix_tariff_seat_number')
    )
    op.create_table('tariff_discount',
    sa.Column('tariff_id', sa.Integer(), nullable=False),
    sa.Column('discount_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['discount_id'], ['discounts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tariff_id'], ['tariffs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tariff_id', 'discount_id')
    )
    op.create_table('tickets',
    sa.Column('ticket_number', sa.String(length=20), nullable=False),
    sa.Column('flight_id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=True),
    sa.Column('passenger_id', sa.Integer(), nullable=True),
    sa.Column('discount_id', sa.Integer(), nullable=True),
    sa.Column('seat_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['discount_id'], ['discounts.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['flight_id'], ['flights.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['passenger_id'], ['passengers.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['seat_id'], ['seats.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('seat_id'),
    sa.UniqueConstraint('ticket_number')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tickets')
    op.drop_table('tariff_discount')
    op.drop_table('seats')
    op.drop_table('tariffs')
    op.drop_table('flights')
    op.drop_table('routes')
    op.drop_table('payments')
    op.drop_table('airports')
    op.drop_table('airlines')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('passengers')
    op.drop_table('discounts')
    op.drop_table('countries')
    op.drop_table('bookings')
    # ### end Alembic commands ###
