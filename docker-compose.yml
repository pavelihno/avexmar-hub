services:
  reverse-proxy:
    container_name: caddy
    image: caddy:2
    restart: unless-stopped
    env_file:
      - ./caddy/.env
    ports:
      - 80:80
      - 443:443
    depends_on:
      server-app:
        condition: service_healthy
      client-app:
        condition: service_healthy
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - app_logs:/var/log/app

  server-app:
    container_name: server-app
    build: ./server
    restart: unless-stopped
    env_file:
      - ./server/.env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./server:/app
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request,sys; sys.exit(urllib.request.urlopen('http://127.0.0.1:8000/health/ready').status != 200)\""]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 10s

  client-app:
    container_name: client-app
    build: ./client
    restart: unless-stopped
    env_file:
      - ./client/.env
    depends_on:
      server-app:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1/healthz > /dev/null || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 10s

  redis:
    container_name: redis
    image: redis:7.2.1-alpine
    restart: unless-stopped
    env_file:
      - ./redis/.env
    command: ["sh", "-c", "redis-server --requirepass \"$$REDIS_PASSWORD\" --appendonly yes"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a \"$$REDIS_PASSWORD\" ping | grep -q PONG"]
      interval: 15s
      timeout: 3s
      retries: 10
      start_period: 10s

  loki:
    container_name: loki
    image: grafana/loki:3.5.5
    restart: unless-stopped
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/config.yaml:ro
      - loki_data:/loki

  alloy:
    container_name: alloy
    image: grafana/alloy:v1.10.2
    restart: unless-stopped
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:12345
      - --storage.path=/var/lib/alloy/data
      - /etc/alloy/config.alloy
    ports:
      - 12345:12345
    volumes:
      - ./monitoring/alloy-config.alloy:/etc/alloy/config.alloy:ro
      - alloy_data:/var/lib/alloy
      - app_logs:/var/log/app:ro
    depends_on:
      loki:
        condition: service_started

  grafana:
    container_name: grafana
    image: grafana/grafana:12.2.0
    restart: unless-stopped
    env_file:
      - ./monitoring/grafana/.env
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      loki:
        condition: service_started
      alloy:
        condition: service_started

volumes:
  app_logs:
  caddy_data:
  redis_data:
  postgres_data:
  loki_data:
  grafana_data:
  alloy_data:
