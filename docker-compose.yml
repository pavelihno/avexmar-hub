services:

  server-app:
    container_name: server-app
    build: ./server
    ports:
      - 8000:8000
    env_file:
      - ./server/.env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./server:/app
      - app_storage:/app/storage
      - app_logs:/app/logs

  storage-cdn:
    container_name: storage-cdn
    image: nginx:1.28-alpine
    ports:
      - 8080:80
    depends_on:
      - server-app
    volumes:
      - ./storage-cdn/storage.conf:/etc/nginx/nginx.conf:ro
      - app_storage:/var/www/storage:ro

  client-app:
    container_name: client-app
    build: ./client
    ports:
      - 3000:3000
    tty: true
    env_file:
      - ./client/.env
    depends_on:
      - server-app
    volumes:
      - ./client:/app
      - /app/node_modules

  postgres:
    container_name: postgres
    image: postgres:15
    ports:
      - 5432:5432
    env_file:
      - ./db/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgbouncer:
    container_name: pgbouncer
    image: edoburu/pgbouncer:latest
    restart: unless-stopped
    volumes:
      - ./db/pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
      - ./db/pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt:ro
    ports:
      - 6432:6432

  redis:
    container_name: redis
    image: redis:7.2.1-alpine
    ports:
      - 6379:6379
    env_file:
      - ./redis/.env
    volumes:
      - redis_data:/data
    command: [ "sh", "-c", "redis-server --requirepass \"$$REDIS_PASSWORD\"" ]

  adminer:
    container_name: adminer
    image: adminer:latest
    profiles:
      - monitoring
    ports:
      - 8082:8080
    depends_on:
      - postgres

  loki:
    container_name: loki
    image: grafana/loki:3.5.5
    command: -config.file=/etc/loki/config.yaml
    profiles:
      - monitoring
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/config.yaml:ro
      - loki_data:/loki

  alloy:
    container_name: alloy
    image: grafana/alloy:v1.10.2
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:12345
      - --storage.path=/var/lib/alloy/data
      - /etc/alloy/config.alloy
    profiles:
      - monitoring
    volumes:
      - ./monitoring/alloy-config.alloy:/etc/alloy/config.alloy:ro
      - alloy_data:/var/lib/alloy
      - app_logs:/var/log/app:ro
    depends_on:
      - loki

  grafana:
    container_name: grafana
    image: grafana/grafana:12.2.0
    env_file:
      - ./monitoring/grafana/.env
    ports:
      - 3001:3000
    profiles:
      - monitoring
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - loki
      - alloy

volumes:
  app_storage:
  app_logs:
  redis_data:
  postgres_data:
  loki_data:
  grafana_data:
  alloy_data:
